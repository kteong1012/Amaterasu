
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.Develop
{

public sealed class DevelopConfig :  Luban.EditorBeanBase 
{
    public DevelopConfig()
    {
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["count"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  count = _fieldJson;
            }
            else
            {
                count = 0;
            }
        }
        
        { 
            var _fieldJson = _json["chara_id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  charaId = _fieldJson;
            }
            else
            {
                charaId = 0;
            }
        }
        
        { 
            var _fieldJson = _json["skill_learn_cost"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  skillLearnCost = _fieldJson;
            }
            else
            {
                skillLearnCost = 0;
            }
        }
        
        { 
            var _fieldJson = _json["skill_learn_drop"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  skillLearnDrop = _fieldJson;
            }
            else
            {
                skillLearnDrop = 0;
            }
        }
        
        { 
            var _fieldJson = _json["property_point_cost"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  propertyPointCost = _fieldJson;
            }
            else
            {
                propertyPointCost = 0;
            }
        }
        
        { 
            var _fieldJson = _json["property_dice_cost"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  propertyDiceCost = _fieldJson;
            }
            else
            {
                propertyDiceCost = 0;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["count"] = new JSONNumber(count);
        }
        {
            _json["chara_id"] = new JSONNumber(charaId);
        }
        {
            _json["skill_learn_cost"] = new JSONNumber(skillLearnCost);
        }
        {
            _json["skill_learn_drop"] = new JSONNumber(skillLearnDrop);
        }
        {
            _json["property_point_cost"] = new JSONNumber(propertyPointCost);
        }
        {
            _json["property_dice_cost"] = new JSONNumber(propertyDiceCost);
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderDevelopConfig(DevelopConfig obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("学习次数", "count"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("count", "学习次数"), GUILayout.Width(100));
}
this.count = UnityEditor.EditorGUILayout.IntField(this.count, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("角色id", "chara_id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("chara_id", "角色id"), GUILayout.Width(100));
}
this.charaId = UnityEditor.EditorGUILayout.IntField(this.charaId, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("技能学习的消耗", "skill_learn_cost"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("skill_learn_cost", "技能学习的消耗"), GUILayout.Width(100));
}
this.skillLearnCost = UnityEditor.EditorGUILayout.IntField(this.skillLearnCost, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("技能学习", "skill_learn_drop"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("skill_learn_drop", "技能学习"), GUILayout.Width(100));
}
this.skillLearnDrop = UnityEditor.EditorGUILayout.IntField(this.skillLearnDrop, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("获得属性点", "property_point_cost"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("property_point_cost", "获得属性点"), GUILayout.Width(100));
}
this.propertyPointCost = UnityEditor.EditorGUILayout.IntField(this.propertyPointCost, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("获得骰子", "property_dice_cost"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("property_dice_cost", "获得骰子"), GUILayout.Width(100));
}
this.propertyDiceCost = UnityEditor.EditorGUILayout.IntField(this.propertyDiceCost, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static DevelopConfig LoadJsonDevelopConfig(SimpleJSON.JSONNode _json)
    {
        DevelopConfig obj = new Develop.DevelopConfig();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDevelopConfig(DevelopConfig _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 学习次数
    /// </summary>
    public int count;
    /// <summary>
    /// 角色id
    /// </summary>
    public int charaId;
    /// <summary>
    /// 技能学习的消耗
    /// </summary>
    public int skillLearnCost;
    /// <summary>
    /// 技能学习
    /// </summary>
    public int skillLearnDrop;
    /// <summary>
    /// 获得属性点
    /// </summary>
    public int propertyPointCost;
    /// <summary>
    /// 获得骰子
    /// </summary>
    public int propertyDiceCost;

    public override string ToString()
    {
        return "{ "
        + "count:" + count + ","
        + "charaId:" + charaId + ","
        + "skillLearnCost:" + skillLearnCost + ","
        + "skillLearnDrop:" + skillLearnDrop + ","
        + "propertyPointCost:" + propertyPointCost + ","
        + "propertyDiceCost:" + propertyDiceCost + ","
        + "}";
    }
}

}

