
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.Story
{

public sealed class StoryConfig :  Luban.EditorBeanBase 
{
    public StoryConfig()
    {
            name = "";
            content = "";
            type = GameEditor.ConfigEditor.Model.Story.StoryType.Challenge;
            charaPool = System.Array.Empty<int>();
            buff = System.Array.Empty<int>();
            level = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.Story.Rank>();
            background = "";
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
            else
            {
                id = 0;
            }
        }
        
        { 
            var _fieldJson = _json["name"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  name = _fieldJson;
            }
            else
            {
                name = "";
            }
        }
        
        { 
            var _fieldJson = _json["content"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  content = _fieldJson;
            }
            else
            {
                content = "";
            }
        }
        
        { 
            var _fieldJson = _json["type"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { type = (GameEditor.ConfigEditor.Model.Story.StoryType)System.Enum.Parse(typeof(GameEditor.ConfigEditor.Model.Story.StoryType), _fieldJson); } else if(_fieldJson.IsNumber) { type = (GameEditor.ConfigEditor.Model.Story.StoryType)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
            else
            {
                type = GameEditor.ConfigEditor.Model.Story.StoryType.Challenge;
            }
        }
        
        { 
            var _fieldJson = _json["chara_limit"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  charaLimit = _fieldJson;
            }
            else
            {
                charaLimit = 0;
            }
        }
        
        { 
            var _fieldJson = _json["chara_pool"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } int __n0 = _fieldJson.Count; charaPool = new int[__n0]; int __i0=0; foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __v0;  if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0;  charaPool[__i0++] = __v0; }  
            }
            else
            {
                charaPool = System.Array.Empty<int>();
            }
        }
        
        { 
            var _fieldJson = _json["buff"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } int __n0 = _fieldJson.Count; buff = new int[__n0]; int __i0=0; foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __v0;  if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0;  buff[__i0++] = __v0; }  
            }
            else
            {
                buff = System.Array.Empty<int>();
            }
        }
        
        { 
            var _fieldJson = _json["level"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } level = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.Story.Rank>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { GameEditor.ConfigEditor.Model.Story.Rank __v0;  if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = GameEditor.ConfigEditor.Model.Story.Rank.LoadJsonRank(__e0);  level.Add(__v0); }  
            }
            else
            {
                level = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.Story.Rank>();
            }
        }
        
        { 
            var _fieldJson = _json["first_floor"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  firstFloor = _fieldJson;
            }
            else
            {
                firstFloor = 0;
            }
        }
        
        { 
            var _fieldJson = _json["gold"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  gold = _fieldJson;
            }
            else
            {
                gold = 0;
            }
        }
        
        { 
            var _fieldJson = _json["background"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  background = _fieldJson;
            }
            else
            {
                background = "";
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }

        if (name != null)
        {
            _json["name"] = new JSONString(name);
        }

        if (content != null)
        {
            _json["content"] = new JSONString(content);
        }
        {
            _json["type"] = new JSONNumber((int)type);
        }
        {
            _json["chara_limit"] = new JSONNumber(charaLimit);
        }

        if (charaPool != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in charaPool) { __cjson0["null"] = new JSONNumber(__e0); } __cjson0.Inline = __cjson0.Count == 0; _json["chara_pool"] = __cjson0; }
        }

        if (buff != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in buff) { __cjson0["null"] = new JSONNumber(__e0); } __cjson0.Inline = __cjson0.Count == 0; _json["buff"] = __cjson0; }
        }

        if (level != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in level) { { var __bjson = new JSONObject();  GameEditor.ConfigEditor.Model.Story.Rank.SaveJsonRank(__e0, __bjson); __cjson0["null"] = __bjson; } } __cjson0.Inline = __cjson0.Count == 0; _json["level"] = __cjson0; }
        }
        {
            _json["first_floor"] = new JSONNumber(firstFloor);
        }
        {
            _json["gold"] = new JSONNumber(gold);
        }

        if (background != null)
        {
            _json["background"] = new JSONString(background);
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderStoryConfig(StoryConfig obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", "id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", "id"), GUILayout.Width(100));
}
this.id = UnityEditor.EditorGUILayout.IntField(this.id, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("战役名称", "name"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("name", "战役名称"), GUILayout.Width(100));
}
this.name = UnityEditor.EditorGUILayout.TextField(this.name, GUILayout.Width(150));
if (GUILayout.Button("…", GUILayout.Width(20)))
{
    TextInputWindow.GetTextAsync(this.name,__x =>this.name = __x);
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("战役说明", "content"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("content", "战役说明"), GUILayout.Width(100));
}
this.content = UnityEditor.EditorGUILayout.TextField(this.content, GUILayout.Width(150));
if (GUILayout.Button("…", GUILayout.Width(20)))
{
    TextInputWindow.GetTextAsync(this.content,__x =>this.content = __x);
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("类型", "type"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("type", "类型"), GUILayout.Width(100));
}
{
    if (ConfigEditorSettings.showComment)
    {
        var __index1 = (int)this.type;
        var __alias1 = (Story.StoryType_Alias)this.type;
        __alias1 = (Story.StoryType_Alias)UnityEditor.EditorGUILayout.EnumPopup(__alias1, GUILayout.Width(150));
        var __item1 = Story.StoryType_Metadata.GetByNameOrAlias(__alias1.ToString());
        this.type = (GameEditor.ConfigEditor.Model.Story.StoryType)__item1.Value;
    }
    else
    {
        this.type = (GameEditor.ConfigEditor.Model.Story.StoryType)UnityEditor.EditorGUILayout.EnumPopup(this.type, GUILayout.Width(150));
    }
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("战役最大人数", "chara_limit"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("chara_limit", "战役最大人数"), GUILayout.Width(100));
}
this.charaLimit = UnityEditor.EditorGUILayout.IntField(this.charaLimit, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("可选角色id", "chara_pool"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("chara_pool", "可选角色id"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.charaPool.Length;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            var __list1 = new System.Collections.Generic.List<int>(this.charaPool);
            __list1.RemoveAt(__i1);
            this.charaPool = __list1.ToArray();
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        int __e1 = this.charaPool[__i1];
        __e1 = UnityEditor.EditorGUILayout.IntField(__e1, GUILayout.Width(150));;
        this.charaPool[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        var __list1 = new System.Collections.Generic.List<int>(this.charaPool);
        int __e1;
        __e1 = 0;;
        __list1.Add(__e1);
        this.charaPool = __list1.ToArray();
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            int __importElement1;
            if(!__importJson1.IsNumber) { throw new SerializationException(); }  __importElement1 = __importJson1;
            var __list1 = new System.Collections.Generic.List<int>(this.charaPool);
            __list1.Add(__importElement1);
            this.charaPool = __list1.ToArray();
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("战役buff", "buff"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("buff", "战役buff"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.buff.Length;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            var __list1 = new System.Collections.Generic.List<int>(this.buff);
            __list1.RemoveAt(__i1);
            this.buff = __list1.ToArray();
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        int __e1 = this.buff[__i1];
        __e1 = UnityEditor.EditorGUILayout.IntField(__e1, GUILayout.Width(150));;
        this.buff[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        var __list1 = new System.Collections.Generic.List<int>(this.buff);
        int __e1;
        __e1 = 0;;
        __list1.Add(__e1);
        this.buff = __list1.ToArray();
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            int __importElement1;
            if(!__importJson1.IsNumber) { throw new SerializationException(); }  __importElement1 = __importJson1;
            var __list1 = new System.Collections.Generic.List<int>(this.buff);
            __list1.Add(__importElement1);
            this.buff = __list1.ToArray();
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("进阶层数", "level"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("level", "进阶层数"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.level.Count;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            this.level.RemoveAt(__i1);
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        GameEditor.ConfigEditor.Model.Story.Rank __e1 = this.level[__i1];
        {
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("story_rank", "story_rank"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("story_rank", ""), GUILayout.Width(100));
}
__e1.storyRank = UnityEditor.EditorGUILayout.IntField(__e1.storyRank, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("buff_list", "buff_list"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("buff_list", ""), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n3 = __e1.buffList.Length;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n3.ToString());
    for (int __i3 = 0; __i3 < __n3; __i3++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            var __list3 = new System.Collections.Generic.List<int>(__e1.buffList);
            __list3.RemoveAt(__i3);
            __e1.buffList = __list3.ToArray();
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i3.ToString(), GUILayout.Width(20));
        int __e3 = __e1.buffList[__i3];
        __e3 = UnityEditor.EditorGUILayout.IntField(__e3, GUILayout.Width(150));;
        __e1.buffList[__i3] = __e3;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        var __list3 = new System.Collections.Generic.List<int>(__e1.buffList);
        int __e3;
        __e3 = 0;;
        __list3.Add(__e3);
        __e1.buffList = __list3.ToArray();
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText3) => 
        {
            var __importJson3 = SimpleJSON.JSON.Parse(__importJsonText3);
            int __importElement3;
            if(!__importJson3.IsNumber) { throw new SerializationException(); }  __importElement3 = __importJson3;
            var __list3 = new System.Collections.Generic.List<int>(__e1.buffList);
            __list3.Add(__importElement3);
            __e1.buffList = __list3.ToArray();
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
};
        this.level[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        GameEditor.ConfigEditor.Model.Story.Rank __e1;
        __e1 = new Story.Rank();;
        this.level.Add(__e1);
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            GameEditor.ConfigEditor.Model.Story.Rank __importElement1;
            if(!__importJson1.IsObject) { throw new SerializationException(); }  __importElement1 = GameEditor.ConfigEditor.Model.Story.Rank.LoadJsonRank(__importJson1);
            this.level.Add(__importElement1);
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("本战役第一个楼层id", "first_floor"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("first_floor", "本战役第一个楼层id"), GUILayout.Width(100));
}
this.firstFloor = UnityEditor.EditorGUILayout.IntField(this.firstFloor, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("金钱数", "gold"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("gold", "金钱数"), GUILayout.Width(100));
}
this.gold = UnityEditor.EditorGUILayout.IntField(this.gold, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("战役选项图片地址", "background"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("background", "战役选项图片地址"), GUILayout.Width(100));
}
this.background = UnityEditor.EditorGUILayout.TextField(this.background, GUILayout.Width(150));
if (GUILayout.Button("…", GUILayout.Width(20)))
{
    TextInputWindow.GetTextAsync(this.background,__x =>this.background = __x);
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static StoryConfig LoadJsonStoryConfig(SimpleJSON.JSONNode _json)
    {
        StoryConfig obj = new Story.StoryConfig();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonStoryConfig(StoryConfig _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// id
    /// </summary>
    public int id;
    /// <summary>
    /// 战役名称
    /// </summary>
    public string name;
    /// <summary>
    /// 战役说明
    /// </summary>
    public string content;
    /// <summary>
    /// 类型
    /// </summary>
    public GameEditor.ConfigEditor.Model.Story.StoryType type;
    /// <summary>
    /// 战役最大人数
    /// </summary>
    public int charaLimit;
    /// <summary>
    /// 可选角色id
    /// </summary>
    public int[] charaPool;
    /// <summary>
    /// 战役buff
    /// </summary>
    public int[] buff;
    /// <summary>
    /// 进阶层数
    /// </summary>
    public System.Collections.Generic.List<GameEditor.ConfigEditor.Model.Story.Rank> level;
    /// <summary>
    /// 本战役第一个楼层id
    /// </summary>
    public int firstFloor;
    /// <summary>
    /// 金钱数
    /// </summary>
    public int gold;
    /// <summary>
    /// 战役选项图片地址
    /// </summary>
    public string background;

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "name:" + name + ","
        + "content:" + content + ","
        + "type:" + type + ","
        + "charaLimit:" + charaLimit + ","
        + "charaPool:" + Luban.StringUtil.CollectionToString(charaPool) + ","
        + "buff:" + Luban.StringUtil.CollectionToString(buff) + ","
        + "level:" + Luban.StringUtil.CollectionToString(level) + ","
        + "firstFloor:" + firstFloor + ","
        + "gold:" + gold + ","
        + "background:" + background + ","
        + "}";
    }
}

}

