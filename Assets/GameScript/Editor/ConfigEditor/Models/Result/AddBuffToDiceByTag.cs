
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.Result
{

/// <summary>
/// 指定Tag骰子附加Buff。触发result后开启一个UI面板，依据Tag显示符合要求的物品骰子（会依据骰子池展示，让玩家知道各个骰子的位置）。玩家选择其中一个骰子，这枚骰子获取某个buff，并获取某个文字tag
/// </summary>
public sealed class AddBuffToDiceByTag :  Result.DataResult 
{
    public AddBuffToDiceByTag()
    {
            diceTag = GameEditor.ConfigEditor.Model.DiceTag.Property;
            addTextTag = "";
    }
    public override string GetTypeStr() => TYPE_STR;
    private const string TYPE_STR = "AddBuffToDiceByTag";

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["dice_tag"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { diceTag = (GameEditor.ConfigEditor.Model.DiceTag)System.Enum.Parse(typeof(GameEditor.ConfigEditor.Model.DiceTag), _fieldJson); } else if(_fieldJson.IsNumber) { diceTag = (GameEditor.ConfigEditor.Model.DiceTag)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
            else
            {
                diceTag = GameEditor.ConfigEditor.Model.DiceTag.Property;
            }
        }
        
        { 
            var _fieldJson = _json["buff_id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  buffId = _fieldJson;
            }
            else
            {
                buffId = 0;
            }
        }
        
        { 
            var _fieldJson = _json["add_text_tag"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  addTextTag = _fieldJson;
            }
            else
            {
                addTextTag = "";
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["dice_tag"] = new JSONNumber((int)diceTag);
        }
        {
            _json["buff_id"] = new JSONNumber(buffId);
        }

        if (addTextTag != null)
        {
            _json["add_text_tag"] = new JSONString(addTextTag);
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderAddBuffToDiceByTag(AddBuffToDiceByTag obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("骰子标签", "dice_tag"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("dice_tag", "骰子标签"), GUILayout.Width(100));
}
{
    if (ConfigEditorSettings.showComment)
    {
        var __index1 = (int)this.diceTag;
        var __alias1 = (DiceTag_Alias)this.diceTag;
        __alias1 = (DiceTag_Alias)UnityEditor.EditorGUILayout.EnumPopup(__alias1, GUILayout.Width(150));
        var __item1 = DiceTag_Metadata.GetByNameOrAlias(__alias1.ToString());
        this.diceTag = (GameEditor.ConfigEditor.Model.DiceTag)__item1.Value;
    }
    else
    {
        this.diceTag = (GameEditor.ConfigEditor.Model.DiceTag)UnityEditor.EditorGUILayout.EnumPopup(this.diceTag, GUILayout.Width(150));
    }
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("Buff ID", "buff_id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("buff_id", "Buff ID"), GUILayout.Width(100));
}
this.buffId = UnityEditor.EditorGUILayout.IntField(this.buffId, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("Buff 文字tag", "add_text_tag"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("add_text_tag", "Buff 文字tag"), GUILayout.Width(100));
}
this.addTextTag = UnityEditor.EditorGUILayout.TextField(this.addTextTag, GUILayout.Width(150));
if (GUILayout.Button("…", GUILayout.Width(20)))
{
    TextInputWindow.GetTextAsync(this.addTextTag,__x =>this.addTextTag = __x);
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static AddBuffToDiceByTag LoadJsonAddBuffToDiceByTag(SimpleJSON.JSONNode _json)
    {
        AddBuffToDiceByTag obj = new Result.AddBuffToDiceByTag();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonAddBuffToDiceByTag(AddBuffToDiceByTag _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 骰子标签
    /// </summary>
    public GameEditor.ConfigEditor.Model.DiceTag diceTag;
    /// <summary>
    /// Buff ID
    /// </summary>
    public int buffId;
    /// <summary>
    /// Buff 文字tag
    /// </summary>
    public string addTextTag;

    public override string ToString()
    {
        return "{ "
        + "diceTag:" + diceTag + ","
        + "buffId:" + buffId + ","
        + "addTextTag:" + addTextTag + ","
        + "}";
    }
}

}

