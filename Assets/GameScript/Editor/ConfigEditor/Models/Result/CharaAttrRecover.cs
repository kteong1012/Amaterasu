
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.Result
{

public sealed class CharaAttrRecover :  Result.DataResult 
{
    public CharaAttrRecover()
    {
            targetType = GameEditor.ConfigEditor.Model.Result.TargetType.Caster;
            srcType = GameEditor.ConfigEditor.Model.Result.ValueSourceType.Gold;
    }
    public override string GetTypeStr() => TYPE_STR;
    private const string TYPE_STR = "CharaAttrRecover";

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["target_type"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { targetType = (GameEditor.ConfigEditor.Model.Result.TargetType)System.Enum.Parse(typeof(GameEditor.ConfigEditor.Model.Result.TargetType), _fieldJson); } else if(_fieldJson.IsNumber) { targetType = (GameEditor.ConfigEditor.Model.Result.TargetType)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
            else
            {
                targetType = GameEditor.ConfigEditor.Model.Result.TargetType.Caster;
            }
        }
        
        { 
            var _fieldJson = _json["src_type"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { srcType = (GameEditor.ConfigEditor.Model.Result.ValueSourceType)System.Enum.Parse(typeof(GameEditor.ConfigEditor.Model.Result.ValueSourceType), _fieldJson); } else if(_fieldJson.IsNumber) { srcType = (GameEditor.ConfigEditor.Model.Result.ValueSourceType)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
            else
            {
                srcType = GameEditor.ConfigEditor.Model.Result.ValueSourceType.Gold;
            }
        }
        
        { 
            var _fieldJson = _json["recover_mul"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  recoverMul = _fieldJson;
            }
            else
            {
                recoverMul = 0;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["target_type"] = new JSONNumber((int)targetType);
        }
        {
            _json["src_type"] = new JSONNumber((int)srcType);
        }
        {
            _json["recover_mul"] = new JSONNumber(recoverMul);
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderCharaAttrRecover(CharaAttrRecover obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("目标类型", "target_type"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("target_type", "目标类型"), GUILayout.Width(100));
}
{
    if (ConfigEditorSettings.showComment)
    {
        var __index1 = (int)this.targetType;
        var __alias1 = (Result.TargetType_Alias)this.targetType;
        __alias1 = (Result.TargetType_Alias)UnityEditor.EditorGUILayout.EnumPopup(__alias1, GUILayout.Width(150));
        var __item1 = Result.TargetType_Metadata.GetByNameOrAlias(__alias1.ToString());
        this.targetType = (GameEditor.ConfigEditor.Model.Result.TargetType)__item1.Value;
    }
    else
    {
        this.targetType = (GameEditor.ConfigEditor.Model.Result.TargetType)UnityEditor.EditorGUILayout.EnumPopup(this.targetType, GUILayout.Width(150));
    }
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("来源类型", "src_type"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("src_type", "来源类型"), GUILayout.Width(100));
}
{
    if (ConfigEditorSettings.showComment)
    {
        var __index1 = (int)this.srcType;
        var __alias1 = (Result.ValueSourceType_Alias)this.srcType;
        __alias1 = (Result.ValueSourceType_Alias)UnityEditor.EditorGUILayout.EnumPopup(__alias1, GUILayout.Width(150));
        var __item1 = Result.ValueSourceType_Metadata.GetByNameOrAlias(__alias1.ToString());
        this.srcType = (GameEditor.ConfigEditor.Model.Result.ValueSourceType)__item1.Value;
    }
    else
    {
        this.srcType = (GameEditor.ConfigEditor.Model.Result.ValueSourceType)UnityEditor.EditorGUILayout.EnumPopup(this.srcType, GUILayout.Width(150));
    }
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("恢复倍率", "recover_mul"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("recover_mul", "恢复倍率"), GUILayout.Width(100));
}
this.recoverMul = UnityEditor.EditorGUILayout.DoubleField(this.recoverMul, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static CharaAttrRecover LoadJsonCharaAttrRecover(SimpleJSON.JSONNode _json)
    {
        CharaAttrRecover obj = new Result.CharaAttrRecover();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonCharaAttrRecover(CharaAttrRecover _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 目标类型
    /// </summary>
    public GameEditor.ConfigEditor.Model.Result.TargetType targetType;
    /// <summary>
    /// 来源类型
    /// </summary>
    public GameEditor.ConfigEditor.Model.Result.ValueSourceType srcType;
    /// <summary>
    /// 恢复倍率
    /// </summary>
    public double recoverMul;

    public override string ToString()
    {
        return "{ "
        + "targetType:" + targetType + ","
        + "srcType:" + srcType + ","
        + "recoverMul:" + recoverMul + ","
        + "}";
    }
}

}

