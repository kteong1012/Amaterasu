
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.Result
{

public sealed class ChangeNumeric :  Result.DataResult 
{
    public ChangeNumeric()
    {
            isBattle = GameEditor.ConfigEditor.Model.NumericId.ATK_INC_DMG_ADD;
    }
    public override string GetTypeStr() => TYPE_STR;
    private const string TYPE_STR = "ChangeNumeric";

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["is_battle"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { isBattle = (GameEditor.ConfigEditor.Model.NumericId)System.Enum.Parse(typeof(GameEditor.ConfigEditor.Model.NumericId), _fieldJson); } else if(_fieldJson.IsNumber) { isBattle = (GameEditor.ConfigEditor.Model.NumericId)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
            else
            {
                isBattle = GameEditor.ConfigEditor.Model.NumericId.ATK_INC_DMG_ADD;
            }
        }
        
        { 
            var _fieldJson = _json["add_value"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  addValue = _fieldJson;
            }
            else
            {
                addValue = 0;
            }
        }
        
        { 
            var _fieldJson = _json["mul_value"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  mulValue = _fieldJson;
            }
            else
            {
                mulValue = 0;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["is_battle"] = new JSONNumber((int)isBattle);
        }
        {
            _json["add_value"] = new JSONNumber(addValue);
        }
        {
            _json["mul_value"] = new JSONNumber(mulValue);
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderChangeNumeric(ChangeNumeric obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("属性", "is_battle"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("is_battle", "属性"), GUILayout.Width(100));
}
{
    if (ConfigEditorSettings.showComment)
    {
        var __index1 = (int)this.isBattle;
        var __alias1 = (NumericId_Alias)this.isBattle;
        __alias1 = (NumericId_Alias)UnityEditor.EditorGUILayout.EnumPopup(__alias1, GUILayout.Width(150));
        var __item1 = NumericId_Metadata.GetByNameOrAlias(__alias1.ToString());
        this.isBattle = (GameEditor.ConfigEditor.Model.NumericId)__item1.Value;
    }
    else
    {
        this.isBattle = (GameEditor.ConfigEditor.Model.NumericId)UnityEditor.EditorGUILayout.EnumPopup(this.isBattle, GUILayout.Width(150));
    }
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("增加数值", "add_value"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("add_value", "增加数值"), GUILayout.Width(100));
}
this.addValue = UnityEditor.EditorGUILayout.IntField(this.addValue, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("乘以数值", "mul_value"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("mul_value", "乘以数值"), GUILayout.Width(100));
}
this.mulValue = UnityEditor.EditorGUILayout.DoubleField(this.mulValue, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static ChangeNumeric LoadJsonChangeNumeric(SimpleJSON.JSONNode _json)
    {
        ChangeNumeric obj = new Result.ChangeNumeric();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonChangeNumeric(ChangeNumeric _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 属性
    /// </summary>
    public GameEditor.ConfigEditor.Model.NumericId isBattle;
    /// <summary>
    /// 增加数值
    /// </summary>
    public int addValue;
    /// <summary>
    /// 乘以数值
    /// </summary>
    public double mulValue;

    public override string ToString()
    {
        return "{ "
        + "isBattle:" + isBattle + ","
        + "addValue:" + addValue + ","
        + "mulValue:" + mulValue + ","
        + "}";
    }
}

}

