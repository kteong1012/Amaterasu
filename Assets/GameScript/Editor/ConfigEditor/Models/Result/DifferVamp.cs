
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.Result
{

public sealed class DifferVamp :  Result.DataResult 
{
    public DifferVamp()
    {
            differType = GameEditor.ConfigEditor.Model.Result.DifferValueType.POS;
    }
    public override string GetTypeStr() => TYPE_STR;
    private const string TYPE_STR = "DifferVamp";

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["differ_type"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { differType = (GameEditor.ConfigEditor.Model.Result.DifferValueType)System.Enum.Parse(typeof(GameEditor.ConfigEditor.Model.Result.DifferValueType), _fieldJson); } else if(_fieldJson.IsNumber) { differType = (GameEditor.ConfigEditor.Model.Result.DifferValueType)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
            else
            {
                differType = GameEditor.ConfigEditor.Model.Result.DifferValueType.POS;
            }
        }
        
        { 
            var _fieldJson = _json["dmg_mul"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  dmgMul = _fieldJson;
            }
            else
            {
                dmgMul = 0;
            }
        }
        
        { 
            var _fieldJson = _json["vamp_mul"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  vampMul = _fieldJson;
            }
            else
            {
                vampMul = 0;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["differ_type"] = new JSONNumber((int)differType);
        }
        {
            _json["dmg_mul"] = new JSONNumber(dmgMul);
        }
        {
            _json["vamp_mul"] = new JSONNumber(vampMul);
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderDifferVamp(DifferVamp obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("差值类型", "differ_type"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("differ_type", "差值类型"), GUILayout.Width(100));
}
{
    if (ConfigEditorSettings.showComment)
    {
        var __index1 = (int)this.differType;
        var __alias1 = (Result.DifferValueType_Alias)this.differType;
        __alias1 = (Result.DifferValueType_Alias)UnityEditor.EditorGUILayout.EnumPopup(__alias1, GUILayout.Width(150));
        var __item1 = Result.DifferValueType_Metadata.GetByNameOrAlias(__alias1.ToString());
        this.differType = (GameEditor.ConfigEditor.Model.Result.DifferValueType)__item1.Value;
    }
    else
    {
        this.differType = (GameEditor.ConfigEditor.Model.Result.DifferValueType)UnityEditor.EditorGUILayout.EnumPopup(this.differType, GUILayout.Width(150));
    }
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("伤害倍率", "dmg_mul"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("dmg_mul", "伤害倍率"), GUILayout.Width(100));
}
this.dmgMul = UnityEditor.EditorGUILayout.DoubleField(this.dmgMul, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("吸血倍率", "vamp_mul"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("vamp_mul", "吸血倍率"), GUILayout.Width(100));
}
this.vampMul = UnityEditor.EditorGUILayout.DoubleField(this.vampMul, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static DifferVamp LoadJsonDifferVamp(SimpleJSON.JSONNode _json)
    {
        DifferVamp obj = new Result.DifferVamp();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDifferVamp(DifferVamp _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 差值类型
    /// </summary>
    public GameEditor.ConfigEditor.Model.Result.DifferValueType differType;
    /// <summary>
    /// 伤害倍率
    /// </summary>
    public double dmgMul;
    /// <summary>
    /// 吸血倍率
    /// </summary>
    public double vampMul;

    public override string ToString()
    {
        return "{ "
        + "differType:" + differType + ","
        + "dmgMul:" + dmgMul + ","
        + "vampMul:" + vampMul + ","
        + "}";
    }
}

}

