
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.Result
{

public sealed class ShootEffect :  Result.VisualResult 
{
    public ShootEffect()
    {
            prefabRoute = null;
    }
    public override string GetTypeStr() => TYPE_STR;
    private const string TYPE_STR = "ShootEffect";

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["duration"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  duration = _fieldJson;
            }
            else
            {
                duration = 0;
            }
        }
        
        { 
            var _fieldJson = _json["prefab_delay"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  prefabDelay = _fieldJson;
            }
            else
            {
                prefabDelay = 0;
            }
        }
        
        { 
            var _fieldJson = _json["prefab_route"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) {throw new SerializationException(); } var prefabRoute_Json = _fieldJson;
                prefabRoute = UnityEditor.AssetDatabase.LoadAssetAtPath<UnityEngine.GameObject>(prefabRoute_Json);
            }
            else
            {
                prefabRoute = null;
            }
        }
        
        { 
            var _fieldJson = _json["prefab_move_duration"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  prefabMoveDuration = _fieldJson;
            }
            else
            {
                prefabMoveDuration = 0;
            }
        }
        
        { 
            var _fieldJson = _json["prefab_stay_duration"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  prefabStayDuration = _fieldJson;
            }
            else
            {
                prefabStayDuration = 0;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["duration"] = new JSONNumber(duration);
        }
        {
            _json["prefab_delay"] = new JSONNumber(prefabDelay);
        }

        if (prefabRoute != null)
        {
            var prefab_route_Path = prefabRoute == null ? "" : UnityEditor.AssetDatabase.GetAssetPath(prefabRoute);
            _json["prefab_route"] = new JSONString(prefab_route_Path);
        }
        {
            _json["prefab_move_duration"] = new JSONNumber(prefabMoveDuration);
        }
        {
            _json["prefab_stay_duration"] = new JSONNumber(prefabStayDuration);
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderShootEffect(ShootEffect obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("表现总时长", "duration"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("duration", "表现总时长"), GUILayout.Width(100));
}
this.duration = UnityEditor.EditorGUILayout.DoubleField(this.duration, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("预制体生成时间", "prefab_delay"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("prefab_delay", "预制体生成时间"), GUILayout.Width(100));
}
this.prefabDelay = UnityEditor.EditorGUILayout.DoubleField(this.prefabDelay, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("预制体地址", "prefab_route"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("prefab_route", "预制体地址"), GUILayout.Width(100));
}
this.prefabRoute = UnityEditor.EditorGUILayout.ObjectField(this.prefabRoute, typeof(UnityEngine.GameObject), false, GUILayout.Width(150)) as UnityEngine.GameObject;
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("预制体飞行时间", "prefab_move_duration"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("prefab_move_duration", "预制体飞行时间"), GUILayout.Width(100));
}
this.prefabMoveDuration = UnityEditor.EditorGUILayout.DoubleField(this.prefabMoveDuration, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("预制体停留时间", "prefab_stay_duration"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("prefab_stay_duration", "预制体停留时间"), GUILayout.Width(100));
}
this.prefabStayDuration = UnityEditor.EditorGUILayout.DoubleField(this.prefabStayDuration, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static ShootEffect LoadJsonShootEffect(SimpleJSON.JSONNode _json)
    {
        ShootEffect obj = new Result.ShootEffect();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonShootEffect(ShootEffect _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 表现总时长
    /// </summary>
    public double duration;
    /// <summary>
    /// 预制体生成时间
    /// </summary>
    public double prefabDelay;
    /// <summary>
    /// 预制体地址
    /// </summary>
    public UnityEngine.Object prefabRoute;
    /// <summary>
    /// 预制体飞行时间
    /// </summary>
    public double prefabMoveDuration;
    /// <summary>
    /// 预制体停留时间
    /// </summary>
    public double prefabStayDuration;

    public override string ToString()
    {
        return "{ "
        + "duration:" + duration + ","
        + "prefabDelay:" + prefabDelay + ","
        + "prefabRoute:" + prefabRoute + ","
        + "prefabMoveDuration:" + prefabMoveDuration + ","
        + "prefabStayDuration:" + prefabStayDuration + ","
        + "}";
    }
}

}

