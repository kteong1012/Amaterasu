
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model
{

public sealed class ItemEquipCount :  Luban.EditorBeanBase 
{
    public ItemEquipCount()
    {
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["Head"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Head = _fieldJson;
            }
            else
            {
                Head = 0;
            }
        }
        
        { 
            var _fieldJson = _json["Hand"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Hand = _fieldJson;
            }
            else
            {
                Hand = 0;
            }
        }
        
        { 
            var _fieldJson = _json["Body"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Body = _fieldJson;
            }
            else
            {
                Body = 0;
            }
        }
        
        { 
            var _fieldJson = _json["Legs"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Legs = _fieldJson;
            }
            else
            {
                Legs = 0;
            }
        }
        
        { 
            var _fieldJson = _json["Followers"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Followers = _fieldJson;
            }
            else
            {
                Followers = 0;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["Head"] = new JSONNumber(Head);
        }
        {
            _json["Hand"] = new JSONNumber(Hand);
        }
        {
            _json["Body"] = new JSONNumber(Body);
        }
        {
            _json["Legs"] = new JSONNumber(Legs);
        }
        {
            _json["Followers"] = new JSONNumber(Followers);
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderItemEquipCount(ItemEquipCount obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("头部", "Head"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("Head", "头部"), GUILayout.Width(100));
}
this.Head = UnityEditor.EditorGUILayout.IntField(this.Head, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("手部", "Hand"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("Hand", "手部"), GUILayout.Width(100));
}
this.Hand = UnityEditor.EditorGUILayout.IntField(this.Hand, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("身体", "Body"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("Body", "身体"), GUILayout.Width(100));
}
this.Body = UnityEditor.EditorGUILayout.IntField(this.Body, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("腿部", "Legs"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("Legs", "腿部"), GUILayout.Width(100));
}
this.Legs = UnityEditor.EditorGUILayout.IntField(this.Legs, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("随从", "Followers"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("Followers", "随从"), GUILayout.Width(100));
}
this.Followers = UnityEditor.EditorGUILayout.IntField(this.Followers, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static ItemEquipCount LoadJsonItemEquipCount(SimpleJSON.JSONNode _json)
    {
        ItemEquipCount obj = new ItemEquipCount();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonItemEquipCount(ItemEquipCount _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 头部
    /// </summary>
    public int Head;
    /// <summary>
    /// 手部
    /// </summary>
    public int Hand;
    /// <summary>
    /// 身体
    /// </summary>
    public int Body;
    /// <summary>
    /// 腿部
    /// </summary>
    public int Legs;
    /// <summary>
    /// 随从
    /// </summary>
    public int Followers;

    public override string ToString()
    {
        return "{ "
        + "Head:" + Head + ","
        + "Hand:" + Hand + ","
        + "Body:" + Body + ","
        + "Legs:" + Legs + ","
        + "Followers:" + Followers + ","
        + "}";
    }
}

}

