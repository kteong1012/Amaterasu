
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model
{

public sealed class SelfRollDiceSkillAction :  SkillAction 
{
    public SelfRollDiceSkillAction()
    {
            atkPools = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.DicePoolType>();
    }
    public override string GetTypeStr() => TYPE_STR;
    private const string TYPE_STR = "SelfRollDiceSkillAction";

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["atk_pools"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } atkPools = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.DicePoolType>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { GameEditor.ConfigEditor.Model.DicePoolType __v0;  if(__e0.IsString) { __v0 = (GameEditor.ConfigEditor.Model.DicePoolType)System.Enum.Parse(typeof(GameEditor.ConfigEditor.Model.DicePoolType), __e0); } else if(__e0.IsNumber) { __v0 = (GameEditor.ConfigEditor.Model.DicePoolType)(int)__e0; } else { throw new SerializationException(); }    atkPools.Add(__v0); }  
            }
            else
            {
                atkPools = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.DicePoolType>();
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {

        if (atkPools != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in atkPools) { __cjson0["null"] = new JSONNumber((int)__e0); } __cjson0.Inline = __cjson0.Count == 0; _json["atk_pools"] = __cjson0; }
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderSelfRollDiceSkillAction(SelfRollDiceSkillAction obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("进攻池", "atk_pools"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("atk_pools", "进攻池"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.atkPools.Count;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            this.atkPools.RemoveAt(__i1);
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        GameEditor.ConfigEditor.Model.DicePoolType __e1 = this.atkPools[__i1];
        {
    if (ConfigEditorSettings.showComment)
    {
        var __index2 = (int)__e1;
        var __alias2 = (DicePoolType_Alias)__e1;
        __alias2 = (DicePoolType_Alias)UnityEditor.EditorGUILayout.EnumPopup(__alias2, GUILayout.Width(150));
        var __item2 = DicePoolType_Metadata.GetByNameOrAlias(__alias2.ToString());
        __e1 = (GameEditor.ConfigEditor.Model.DicePoolType)__item2.Value;
    }
    else
    {
        __e1 = (GameEditor.ConfigEditor.Model.DicePoolType)UnityEditor.EditorGUILayout.EnumPopup(__e1, GUILayout.Width(150));
    }
};
        this.atkPools[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        GameEditor.ConfigEditor.Model.DicePoolType __e1;
        __e1 = GameEditor.ConfigEditor.Model.DicePoolType.Extra;;
        this.atkPools.Add(__e1);
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            GameEditor.ConfigEditor.Model.DicePoolType __importElement1;
            if(__importJson1.IsString) { __importElement1 = (GameEditor.ConfigEditor.Model.DicePoolType)System.Enum.Parse(typeof(GameEditor.ConfigEditor.Model.DicePoolType), __importJson1); } else if(__importJson1.IsNumber) { __importElement1 = (GameEditor.ConfigEditor.Model.DicePoolType)(int)__importJson1; } else { throw new SerializationException(); }  
            this.atkPools.Add(__importElement1);
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static SelfRollDiceSkillAction LoadJsonSelfRollDiceSkillAction(SimpleJSON.JSONNode _json)
    {
        SelfRollDiceSkillAction obj = new SelfRollDiceSkillAction();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonSelfRollDiceSkillAction(SelfRollDiceSkillAction _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 进攻池
    /// </summary>
    public System.Collections.Generic.List<GameEditor.ConfigEditor.Model.DicePoolType> atkPools;

    public override string ToString()
    {
        return "{ "
        + "atkPools:" + Luban.StringUtil.CollectionToString(atkPools) + ","
        + "}";
    }
}

}

