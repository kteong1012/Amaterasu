
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.Floor
{

public sealed class FloorConfig :  Luban.EditorBeanBase 
{
    public FloorConfig()
    {
            buff = System.Array.Empty<int>();
            audio = "";
            roomGroup = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.Floor.RoomGroupList>();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
            else
            {
                id = 0;
            }
        }
        
        { 
            var _fieldJson = _json["buff"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } int __n0 = _fieldJson.Count; buff = new int[__n0]; int __i0=0; foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __v0;  if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0;  buff[__i0++] = __v0; }  
            }
            else
            {
                buff = System.Array.Empty<int>();
            }
        }
        
        { 
            var _fieldJson = _json["start_room"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  startRoom = _fieldJson;
            }
            else
            {
                startRoom = 0;
            }
        }
        
        { 
            var _fieldJson = _json["next_floor"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  nextFloor = _fieldJson;
            }
            else
            {
                nextFloor = 0;
            }
        }
        
        { 
            var _fieldJson = _json["random_generate"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsBoolean) { throw new SerializationException(); }  randomGenerate = _fieldJson;
            }
            else
            {
                randomGenerate = false;
            }
        }
        
        { 
            var _fieldJson = _json["audio"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  audio = _fieldJson;
            }
            else
            {
                audio = "";
            }
        }
        
        { 
            var _fieldJson = _json["room_group"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } roomGroup = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.Floor.RoomGroupList>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { GameEditor.ConfigEditor.Model.Floor.RoomGroupList __v0;  if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = GameEditor.ConfigEditor.Model.Floor.RoomGroupList.LoadJsonRoomGroupList(__e0);  roomGroup.Add(__v0); }  
            }
            else
            {
                roomGroup = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.Floor.RoomGroupList>();
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }

        if (buff != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in buff) { __cjson0["null"] = new JSONNumber(__e0); } __cjson0.Inline = __cjson0.Count == 0; _json["buff"] = __cjson0; }
        }
        {
            _json["start_room"] = new JSONNumber(startRoom);
        }
        {
            _json["next_floor"] = new JSONNumber(nextFloor);
        }
        {
            _json["random_generate"] = new JSONBool(randomGenerate);
        }

        if (audio != null)
        {
            _json["audio"] = new JSONString(audio);
        }

        if (roomGroup != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in roomGroup) { { var __bjson = new JSONObject();  GameEditor.ConfigEditor.Model.Floor.RoomGroupList.SaveJsonRoomGroupList(__e0, __bjson); __cjson0["null"] = __bjson; } } __cjson0.Inline = __cjson0.Count == 0; _json["room_group"] = __cjson0; }
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderFloorConfig(FloorConfig obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", "id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", "id"), GUILayout.Width(100));
}
this.id = UnityEditor.EditorGUILayout.IntField(this.id, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("楼层上帝拥有的buff", "buff"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("buff", "楼层上帝拥有的buff"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.buff.Length;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            var __list1 = new System.Collections.Generic.List<int>(this.buff);
            __list1.RemoveAt(__i1);
            this.buff = __list1.ToArray();
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        int __e1 = this.buff[__i1];
        __e1 = UnityEditor.EditorGUILayout.IntField(__e1, GUILayout.Width(150));;
        this.buff[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        var __list1 = new System.Collections.Generic.List<int>(this.buff);
        int __e1;
        __e1 = 0;;
        __list1.Add(__e1);
        this.buff = __list1.ToArray();
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            int __importElement1;
            if(!__importJson1.IsNumber) { throw new SerializationException(); }  __importElement1 = __importJson1;
            var __list1 = new System.Collections.Generic.List<int>(this.buff);
            __list1.Add(__importElement1);
            this.buff = __list1.ToArray();
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("起始房间id", "start_room"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("start_room", "起始房间id"), GUILayout.Width(100));
}
this.startRoom = UnityEditor.EditorGUILayout.IntField(this.startRoom, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("下一楼层的id", "next_floor"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("next_floor", "下一楼层的id"), GUILayout.Width(100));
}
this.nextFloor = UnityEditor.EditorGUILayout.IntField(this.nextFloor, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("楼层房间是否随机生成", "random_generate"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("random_generate", "楼层房间是否随机生成"), GUILayout.Width(100));
}
this.randomGenerate = UnityEditor.EditorGUILayout.Toggle(this.randomGenerate, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("楼层专用bgm", "audio"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("audio", "楼层专用bgm"), GUILayout.Width(100));
}
this.audio = UnityEditor.EditorGUILayout.TextField(this.audio, GUILayout.Width(150));
if (GUILayout.Button("…", GUILayout.Width(20)))
{
    TextInputWindow.GetTextAsync(this.audio,__x =>this.audio = __x);
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("楼层组", "room_group"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("room_group", "楼层组"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.roomGroup.Count;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            this.roomGroup.RemoveAt(__i1);
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        GameEditor.ConfigEditor.Model.Floor.RoomGroupList __e1 = this.roomGroup[__i1];
        {
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", "id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", ""), GUILayout.Width(100));
}
__e1.id = UnityEditor.EditorGUILayout.IntField(__e1.id, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
};
        this.roomGroup[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        GameEditor.ConfigEditor.Model.Floor.RoomGroupList __e1;
        __e1 = new Floor.RoomGroupList();;
        this.roomGroup.Add(__e1);
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            GameEditor.ConfigEditor.Model.Floor.RoomGroupList __importElement1;
            if(!__importJson1.IsObject) { throw new SerializationException(); }  __importElement1 = GameEditor.ConfigEditor.Model.Floor.RoomGroupList.LoadJsonRoomGroupList(__importJson1);
            this.roomGroup.Add(__importElement1);
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static FloorConfig LoadJsonFloorConfig(SimpleJSON.JSONNode _json)
    {
        FloorConfig obj = new Floor.FloorConfig();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonFloorConfig(FloorConfig _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// id
    /// </summary>
    public int id;
    /// <summary>
    /// 楼层上帝拥有的buff
    /// </summary>
    public int[] buff;
    /// <summary>
    /// 起始房间id
    /// </summary>
    public int startRoom;
    /// <summary>
    /// 下一楼层的id
    /// </summary>
    public int nextFloor;
    /// <summary>
    /// 楼层房间是否随机生成
    /// </summary>
    public bool randomGenerate;
    /// <summary>
    /// 楼层专用bgm
    /// </summary>
    public string audio;
    /// <summary>
    /// 楼层组
    /// </summary>
    public System.Collections.Generic.List<GameEditor.ConfigEditor.Model.Floor.RoomGroupList> roomGroup;

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "buff:" + Luban.StringUtil.CollectionToString(buff) + ","
        + "startRoom:" + startRoom + ","
        + "nextFloor:" + nextFloor + ","
        + "randomGenerate:" + randomGenerate + ","
        + "audio:" + audio + ","
        + "roomGroup:" + Luban.StringUtil.CollectionToString(roomGroup) + ","
        + "}";
    }
}

}

