
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.Dice
{

public sealed class DiceFaceValue :  Luban.EditorBeanBase 
{
    public DiceFaceValue()
    {
            icon = "";
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["value"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  value = _fieldJson;
            }
            else
            {
                value = 0;
            }
        }
        
        { 
            var _fieldJson = _json["skill"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  skill = _fieldJson;
            }
            else
            {
                skill = 0;
            }
        }
        
        { 
            var _fieldJson = _json["item"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  item = _fieldJson;
            }
            else
            {
                item = 0;
            }
        }
        
        { 
            var _fieldJson = _json["icon"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  icon = _fieldJson;
            }
            else
            {
                icon = "";
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["value"] = new JSONNumber(value);
        }
        {
            _json["skill"] = new JSONNumber(skill);
        }
        {
            _json["item"] = new JSONNumber(item);
        }

        if (icon != null)
        {
            _json["icon"] = new JSONString(icon);
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderDiceFaceValue(DiceFaceValue obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("骰面值", "value"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("value", "骰面值"), GUILayout.Width(100));
}
this.value = UnityEditor.EditorGUILayout.IntField(this.value, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("骰面技能", "skill"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("skill", "骰面技能"), GUILayout.Width(100));
}
this.skill = UnityEditor.EditorGUILayout.IntField(this.skill, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("骰面物品", "item"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("item", "骰面物品"), GUILayout.Width(100));
}
this.item = UnityEditor.EditorGUILayout.IntField(this.item, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("骰面贴图地址", "icon"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("icon", "骰面贴图地址"), GUILayout.Width(100));
}
this.icon = UnityEditor.EditorGUILayout.TextField(this.icon, GUILayout.Width(150));
if (GUILayout.Button("…", GUILayout.Width(20)))
{
    TextInputWindow.GetTextAsync(this.icon,__x =>this.icon = __x);
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static DiceFaceValue LoadJsonDiceFaceValue(SimpleJSON.JSONNode _json)
    {
        DiceFaceValue obj = new Dice.DiceFaceValue();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDiceFaceValue(DiceFaceValue _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 骰面值
    /// </summary>
    public int value;
    /// <summary>
    /// 骰面技能
    /// </summary>
    public int skill;
    /// <summary>
    /// 骰面物品
    /// </summary>
    public int item;
    /// <summary>
    /// 骰面贴图地址
    /// </summary>
    public string icon;

    public override string ToString()
    {
        return "{ "
        + "value:" + value + ","
        + "skill:" + skill + ","
        + "item:" + item + ","
        + "icon:" + icon + ","
        + "}";
    }
}

}

