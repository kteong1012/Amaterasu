
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.BattleAIPickTarget
{

public sealed class NoRandom :  BattleAIPickTarget.PresetOrLoopArgs 
{
    public NoRandom()
    {
            TargetPick = new GameEditor.ConfigEditor.Model.AiArg();
    }
    public override string GetTypeStr() => TYPE_STR;
    private const string TYPE_STR = "NoRandom";

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["TargetPick"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsObject) { throw new SerializationException(); }  TargetPick = GameEditor.ConfigEditor.Model.AiArg.LoadJsonAiArg(_fieldJson);
            }
            else
            {
                TargetPick = new AiArg();
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {

        if (TargetPick != null)
        {
            { var __bjson = new JSONObject();  GameEditor.ConfigEditor.Model.AiArg.SaveJsonAiArg(TargetPick, __bjson); _json["TargetPick"] = __bjson; }
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderNoRandom(NoRandom obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("目标参数", "TargetPick"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("TargetPick", "目标参数"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("技能id", "skill_id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("skill_id", "技能id"), GUILayout.Width(100));
}
this.TargetPick.skillId = UnityEditor.EditorGUILayout.IntField(this.TargetPick.skillId, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("AI索敌参数", "target_param"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("target_param", "AI索敌参数"), GUILayout.Width(100));
}
{
    if (this.TargetPick.targetParam == null)
{   
    this.TargetPick.targetParam = BattleAIPickTarget.PickTargetParam.Create("SkillAoe");
}
    BattleAIPickTarget.PickTargetParam.RenderPickTargetParam(ref this.TargetPick.targetParam);
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static NoRandom LoadJsonNoRandom(SimpleJSON.JSONNode _json)
    {
        NoRandom obj = new BattleAIPickTarget.NoRandom();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonNoRandom(NoRandom _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 目标参数
    /// </summary>
    public GameEditor.ConfigEditor.Model.AiArg TargetPick;

    public override string ToString()
    {
        return "{ "
        + "TargetPick:" + TargetPick + ","
        + "}";
    }
}

}

