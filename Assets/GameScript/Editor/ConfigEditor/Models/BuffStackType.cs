
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace GameEditor.ConfigEditor.Model
{
    /// <summary>
    /// Buff堆叠规则
    /// </summary>
    public enum BuffStackType
    {
        /// <summary>
        /// 叠加
        /// </summary>
        Add = 0,
        /// <summary>
        /// 覆盖
        /// </summary>
        Override = 1,
        /// <summary>
        /// 并列叠加
        /// </summary>
        Coordinate = 2,
    }

    public enum BuffStackType_Alias
    {
        叠加 = 0,
        覆盖 = 1,
        并列叠加 = 2,
    }

    public static class BuffStackType_Metadata
    {
        public static readonly Luban.EditorEnumItemInfo Add = new Luban.EditorEnumItemInfo("Add", "叠加", 0, "叠加");
        public static readonly Luban.EditorEnumItemInfo Override = new Luban.EditorEnumItemInfo("Override", "覆盖", 1, "覆盖");
        public static readonly Luban.EditorEnumItemInfo Coordinate = new Luban.EditorEnumItemInfo("Coordinate", "并列叠加", 2, "并列叠加");

        private static readonly System.Collections.Generic.List<Luban.EditorEnumItemInfo> __items = new System.Collections.Generic.List<Luban.EditorEnumItemInfo>
        {
            Add,
            Override,
            Coordinate,
        };

        public static System.Collections.Generic.List<Luban.EditorEnumItemInfo> GetItems() => __items;

        public static Luban.EditorEnumItemInfo GetByName(string name)
        {
            return __items.Find(c => c.Name == name);
        }

        public static Luban.EditorEnumItemInfo GetByNameOrAlias(string name)
        {
            return __items.Find(c => c.Name == name || c.Alias == name);
        }

        public static Luban.EditorEnumItemInfo GetByValue(int value)
        {
            return __items.Find(c => c.Value == value);
        }
    }

} 

