
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model
{

public sealed class BattleAI :  Luban.EditorBeanBase 
{
    public BattleAI()
    {
            actArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.AiArg>();
            presetArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs>();
            loopArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs>();
            extraArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.AiArg>();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
            else
            {
                id = 0;
            }
        }
        
        { 
            var _fieldJson = _json["act_args"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } actArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.AiArg>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { GameEditor.ConfigEditor.Model.AiArg __v0;  if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = GameEditor.ConfigEditor.Model.AiArg.LoadJsonAiArg(__e0);  actArgs.Add(__v0); }  
            }
            else
            {
                actArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.AiArg>();
            }
        }
        
        { 
            var _fieldJson = _json["preset_args"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } presetArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs __v0;  
                if (!__e0.IsObject)
                {
                    throw new SerializationException();
                }
                __v0 = GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs.LoadJsonPresetOrLoopArgs(__e0);  presetArgs.Add(__v0); }  
            }
            else
            {
                presetArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs>();
            }
        }
        
        { 
            var _fieldJson = _json["loop_args"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } loopArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs __v0;  
                if (!__e0.IsObject)
                {
                    throw new SerializationException();
                }
                __v0 = GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs.LoadJsonPresetOrLoopArgs(__e0);  loopArgs.Add(__v0); }  
            }
            else
            {
                loopArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs>();
            }
        }
        
        { 
            var _fieldJson = _json["extra_args"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } extraArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.AiArg>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { GameEditor.ConfigEditor.Model.AiArg __v0;  if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = GameEditor.ConfigEditor.Model.AiArg.LoadJsonAiArg(__e0);  extraArgs.Add(__v0); }  
            }
            else
            {
                extraArgs = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.AiArg>();
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }

        if (actArgs != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in actArgs) { { var __bjson = new JSONObject();  GameEditor.ConfigEditor.Model.AiArg.SaveJsonAiArg(__e0, __bjson); __cjson0["null"] = __bjson; } } __cjson0.Inline = __cjson0.Count == 0; _json["act_args"] = __cjson0; }
        }

        if (presetArgs != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in presetArgs) { { var __bjson = new JSONObject();  GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs.SaveJsonPresetOrLoopArgs(__e0, __bjson); __cjson0["null"] = __bjson; } } __cjson0.Inline = __cjson0.Count == 0; _json["preset_args"] = __cjson0; }
        }

        if (loopArgs != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in loopArgs) { { var __bjson = new JSONObject();  GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs.SaveJsonPresetOrLoopArgs(__e0, __bjson); __cjson0["null"] = __bjson; } } __cjson0.Inline = __cjson0.Count == 0; _json["loop_args"] = __cjson0; }
        }

        if (extraArgs != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in extraArgs) { { var __bjson = new JSONObject();  GameEditor.ConfigEditor.Model.AiArg.SaveJsonAiArg(__e0, __bjson); __cjson0["null"] = __bjson; } } __cjson0.Inline = __cjson0.Count == 0; _json["extra_args"] = __cjson0; }
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderBattleAI(BattleAI obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", "id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", "id"), GUILayout.Width(100));
}
this.id = UnityEditor.EditorGUILayout.IntField(this.id, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("随机行动", "act_args"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("act_args", "随机行动"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.actArgs.Count;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            this.actArgs.RemoveAt(__i1);
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        GameEditor.ConfigEditor.Model.AiArg __e1 = this.actArgs[__i1];
        {
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("技能id", "skill_id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("skill_id", "技能id"), GUILayout.Width(100));
}
__e1.skillId = UnityEditor.EditorGUILayout.IntField(__e1.skillId, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("AI索敌参数", "target_param"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("target_param", "AI索敌参数"), GUILayout.Width(100));
}
{
    if (__e1.targetParam == null)
{   
    __e1.targetParam = BattleAIPickTarget.PickTargetParam.Create("SkillAoe");
}
    BattleAIPickTarget.PickTargetParam.RenderPickTargetParam(ref __e1.targetParam);
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
};
        this.actArgs[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        GameEditor.ConfigEditor.Model.AiArg __e1;
        __e1 = new AiArg();;
        this.actArgs.Add(__e1);
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            GameEditor.ConfigEditor.Model.AiArg __importElement1;
            if(!__importJson1.IsObject) { throw new SerializationException(); }  __importElement1 = GameEditor.ConfigEditor.Model.AiArg.LoadJsonAiArg(__importJson1);
            this.actArgs.Add(__importElement1);
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("预设行动", "preset_args"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("preset_args", "预设行动"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.presetArgs.Count;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            this.presetArgs.RemoveAt(__i1);
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs __e1 = this.presetArgs[__i1];
        {
    if (__e1 == null)
{   
    __e1 = BattleAIPickTarget.PresetOrLoopArgs.Create("NoRandom");
}
    BattleAIPickTarget.PresetOrLoopArgs.RenderPresetOrLoopArgs(ref __e1);
};
        this.presetArgs[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs __e1;
        __e1 = BattleAIPickTarget.PresetOrLoopArgs.Create("NoRandom");;
        this.presetArgs.Add(__e1);
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs __importElement1;
            
if (!__importJson1.IsObject)
{
    throw new SerializationException();
}
__importElement1 = GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs.LoadJsonPresetOrLoopArgs(__importJson1);
            this.presetArgs.Add(__importElement1);
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("循环行动", "loop_args"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("loop_args", "循环行动"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.loopArgs.Count;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            this.loopArgs.RemoveAt(__i1);
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs __e1 = this.loopArgs[__i1];
        {
    if (__e1 == null)
{   
    __e1 = BattleAIPickTarget.PresetOrLoopArgs.Create("NoRandom");
}
    BattleAIPickTarget.PresetOrLoopArgs.RenderPresetOrLoopArgs(ref __e1);
};
        this.loopArgs[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs __e1;
        __e1 = BattleAIPickTarget.PresetOrLoopArgs.Create("NoRandom");;
        this.loopArgs.Add(__e1);
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs __importElement1;
            
if (!__importJson1.IsObject)
{
    throw new SerializationException();
}
__importElement1 = GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs.LoadJsonPresetOrLoopArgs(__importJson1);
            this.loopArgs.Add(__importElement1);
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("额外行动", "extra_args"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("extra_args", "额外行动"), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.extraArgs.Count;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            this.extraArgs.RemoveAt(__i1);
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        GameEditor.ConfigEditor.Model.AiArg __e1 = this.extraArgs[__i1];
        {
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("技能id", "skill_id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("skill_id", "技能id"), GUILayout.Width(100));
}
__e1.skillId = UnityEditor.EditorGUILayout.IntField(__e1.skillId, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("AI索敌参数", "target_param"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("target_param", "AI索敌参数"), GUILayout.Width(100));
}
{
    if (__e1.targetParam == null)
{   
    __e1.targetParam = BattleAIPickTarget.PickTargetParam.Create("SkillAoe");
}
    BattleAIPickTarget.PickTargetParam.RenderPickTargetParam(ref __e1.targetParam);
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
};
        this.extraArgs[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        GameEditor.ConfigEditor.Model.AiArg __e1;
        __e1 = new AiArg();;
        this.extraArgs.Add(__e1);
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            GameEditor.ConfigEditor.Model.AiArg __importElement1;
            if(!__importJson1.IsObject) { throw new SerializationException(); }  __importElement1 = GameEditor.ConfigEditor.Model.AiArg.LoadJsonAiArg(__importJson1);
            this.extraArgs.Add(__importElement1);
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static BattleAI LoadJsonBattleAI(SimpleJSON.JSONNode _json)
    {
        BattleAI obj = new BattleAI();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonBattleAI(BattleAI _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// id
    /// </summary>
    public int id;
    /// <summary>
    /// 随机行动
    /// </summary>
    public System.Collections.Generic.List<GameEditor.ConfigEditor.Model.AiArg> actArgs;
    /// <summary>
    /// 预设行动
    /// </summary>
    public System.Collections.Generic.List<GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs> presetArgs;
    /// <summary>
    /// 循环行动
    /// </summary>
    public System.Collections.Generic.List<GameEditor.ConfigEditor.Model.BattleAIPickTarget.PresetOrLoopArgs> loopArgs;
    /// <summary>
    /// 额外行动
    /// </summary>
    public System.Collections.Generic.List<GameEditor.ConfigEditor.Model.AiArg> extraArgs;

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "actArgs:" + Luban.StringUtil.CollectionToString(actArgs) + ","
        + "presetArgs:" + Luban.StringUtil.CollectionToString(presetArgs) + ","
        + "loopArgs:" + Luban.StringUtil.CollectionToString(loopArgs) + ","
        + "extraArgs:" + Luban.StringUtil.CollectionToString(extraArgs) + ","
        + "}";
    }
}

}

