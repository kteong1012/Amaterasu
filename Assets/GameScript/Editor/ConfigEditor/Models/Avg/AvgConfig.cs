
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.Avg
{

public sealed class AvgConfig :  Luban.EditorBeanBase 
{
    public AvgConfig()
    {
            content = "";
            speaker = "";
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
            else
            {
                id = 0;
            }
        }
        
        { 
            var _fieldJson = _json["avg_behaviour"];
            if (_fieldJson != null)
            {
                
                if (!_fieldJson.IsObject)
                {
                    throw new SerializationException();
                }
                avgBehaviour = GameEditor.ConfigEditor.Model.Avg.DialogueBehaviour.LoadJsonDialogueBehaviour(_fieldJson);
            }
            else
            {
                avgBehaviour = Avg.DialogueBehaviour.Create("NormalBehaviour");
            }
        }
        
        { 
            var _fieldJson = _json["content"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  content = _fieldJson;
            }
            else
            {
                content = "";
            }
        }
        
        { 
            var _fieldJson = _json["speaker"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  speaker = _fieldJson;
            }
            else
            {
                speaker = "";
            }
        }
        
        { 
            var _fieldJson = _json["is_end"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsBoolean) { throw new SerializationException(); }  isEnd = _fieldJson;
            }
            else
            {
                isEnd = false;
            }
        }
        
        { 
            var _fieldJson = _json["audio"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  audio = _fieldJson;
            }
            else
            {
                audio = 0;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }

        if (avgBehaviour != null)
        {
            { var __bjson = new JSONObject();  GameEditor.ConfigEditor.Model.Avg.DialogueBehaviour.SaveJsonDialogueBehaviour(avgBehaviour, __bjson); _json["avg_behaviour"] = __bjson; }
        }

        if (content != null)
        {
            _json["content"] = new JSONString(content);
        }

        if (speaker != null)
        {
            _json["speaker"] = new JSONString(speaker);
        }
        {
            _json["is_end"] = new JSONBool(isEnd);
        }
        {
            _json["audio"] = new JSONNumber(audio);
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderAvgConfig(AvgConfig obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", "id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", "id"), GUILayout.Width(100));
}
this.id = UnityEditor.EditorGUILayout.IntField(this.id, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("类型参数", "avg_behaviour"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("avg_behaviour", "类型参数"), GUILayout.Width(100));
}
{
    if (this.avgBehaviour == null)
{   
    this.avgBehaviour = Avg.DialogueBehaviour.Create("NormalBehaviour");
}
    Avg.DialogueBehaviour.RenderDialogueBehaviour(ref this.avgBehaviour);
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("文本内容", "content"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("content", "文本内容"), GUILayout.Width(100));
}
this.content = UnityEditor.EditorGUILayout.TextField(this.content, GUILayout.Width(150));
if (GUILayout.Button("…", GUILayout.Width(20)))
{
    TextInputWindow.GetTextAsync(this.content,__x =>this.content = __x);
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("诉说者", "speaker"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("speaker", "诉说者"), GUILayout.Width(100));
}
this.speaker = UnityEditor.EditorGUILayout.TextField(this.speaker, GUILayout.Width(150));
if (GUILayout.Button("…", GUILayout.Width(20)))
{
    TextInputWindow.GetTextAsync(this.speaker,__x =>this.speaker = __x);
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("是否是结束", "is_end"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("is_end", "是否是结束"), GUILayout.Width(100));
}
this.isEnd = UnityEditor.EditorGUILayout.Toggle(this.isEnd, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("音效", "audio"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("audio", "音效"), GUILayout.Width(100));
}
this.audio = UnityEditor.EditorGUILayout.IntField(this.audio, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static AvgConfig LoadJsonAvgConfig(SimpleJSON.JSONNode _json)
    {
        AvgConfig obj = new Avg.AvgConfig();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonAvgConfig(AvgConfig _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// id
    /// </summary>
    public int id;
    /// <summary>
    /// 类型参数
    /// </summary>
    public GameEditor.ConfigEditor.Model.Avg.DialogueBehaviour avgBehaviour;
    /// <summary>
    /// 文本内容
    /// </summary>
    public string content;
    /// <summary>
    /// 诉说者
    /// </summary>
    public string speaker;
    /// <summary>
    /// 是否是结束
    /// </summary>
    public bool isEnd;
    /// <summary>
    /// 音效
    /// </summary>
    public int audio;

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "avgBehaviour:" + avgBehaviour + ","
        + "content:" + content + ","
        + "speaker:" + speaker + ","
        + "isEnd:" + isEnd + ","
        + "audio:" + audio + ","
        + "}";
    }
}

}

