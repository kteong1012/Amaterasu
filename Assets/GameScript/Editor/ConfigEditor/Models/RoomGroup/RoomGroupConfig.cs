
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;
using System;

namespace GameEditor.ConfigEditor.Model.RoomGroup
{

public sealed class RoomGroupConfig :  Luban.EditorBeanBase 
{
    public RoomGroupConfig()
    {
            rule = GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupRule.IndiviRandom;
            elements = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement>();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
            else
            {
                id = 0;
            }
        }
        
        { 
            var _fieldJson = _json["rule"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { rule = (GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupRule)System.Enum.Parse(typeof(GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupRule), _fieldJson); } else if(_fieldJson.IsNumber) { rule = (GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupRule)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
            else
            {
                rule = GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupRule.IndiviRandom;
            }
        }
        
        { 
            var _fieldJson = _json["elements"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } elements = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement __v0;  if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement.LoadJsonRoomGroupElement(__e0);  elements.Add(__v0); }  
            }
            else
            {
                elements = new System.Collections.Generic.List<GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement>();
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }
        {
            _json["rule"] = new JSONNumber((int)rule);
        }

        if (elements != null)
        {
            { var __cjson0 = new JSONArray(); foreach(var __e0 in elements) { { var __bjson = new JSONObject();  GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement.SaveJsonRoomGroupElement(__e0, __bjson); __cjson0["null"] = __bjson; } } __cjson0.Inline = __cjson0.Count == 0; _json["elements"] = __cjson0; }
        }
    }

    private static GUIStyle _areaStyle = new GUIStyle(GUI.skin.button);

    public static void RenderRoomGroupConfig(RoomGroupConfig obj)
    {
        obj.Render();
    }

    public override void Render()
    {
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("序号#", "id"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("id", "序号#"), GUILayout.Width(100));
}
this.id = UnityEditor.EditorGUILayout.IntField(this.id, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("rule", "rule"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("rule", ""), GUILayout.Width(100));
}
{
    if (ConfigEditorSettings.showComment)
    {
        var __index1 = (int)this.rule;
        var __alias1 = (RoomGroup.RoomGroupRule_Alias)this.rule;
        __alias1 = (RoomGroup.RoomGroupRule_Alias)UnityEditor.EditorGUILayout.EnumPopup(__alias1, GUILayout.Width(150));
        var __item1 = RoomGroup.RoomGroupRule_Metadata.GetByNameOrAlias(__alias1.ToString());
        this.rule = (GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupRule)__item1.Value;
    }
    else
    {
        this.rule = (GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupRule)UnityEditor.EditorGUILayout.EnumPopup(this.rule, GUILayout.Width(150));
    }
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("elements", "elements"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("elements", ""), GUILayout.Width(100));
}
{
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);
    int __n1 = this.elements.Count;
    UnityEditor.EditorGUILayout.LabelField("长度: " + __n1.ToString());
    for (int __i1 = 0; __i1 < __n1; __i1++)
    {
        UnityEditor.EditorGUILayout.BeginHorizontal();
        if (GUILayout.Button("-", GUILayout.Width(20)))
        {
            this.elements.RemoveAt(__i1);
            UnityEditor.EditorGUILayout.EndHorizontal();
            break;
        }
        UnityEditor.EditorGUILayout.LabelField(__i1.ToString(), GUILayout.Width(20));
        GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement __e1 = this.elements[__i1];
        {
    UnityEditor.EditorGUILayout.BeginVertical(_areaStyle);UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("RoomGroup_item", "RoomGroup_item"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("RoomGroup_item", ""), GUILayout.Width(100));
}
{
    if (__e1.RoomGroupItem == null)
{   
    __e1.RoomGroupItem = RoomGroup.Result.RoomGroupResult.Create("RoomGroupConfigResult");
}
    RoomGroup.Result.RoomGroupResult.RenderRoomGroupResult(ref __e1.RoomGroupItem);
}
UnityEditor.EditorGUILayout.EndHorizontal();UnityEditor.EditorGUILayout.BeginHorizontal();
if (ConfigEditorSettings.showComment)
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("factor", "factor"), GUILayout.Width(100));
}
else
{
    UnityEditor.EditorGUILayout.LabelField(new UnityEngine.GUIContent("factor", ""), GUILayout.Width(100));
}
__e1.factor = UnityEditor.EditorGUILayout.IntField(__e1.factor, GUILayout.Width(150));
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
};
        this.elements[__i1] = __e1;
        UnityEditor.EditorGUILayout.EndHorizontal();
    }
    UnityEditor.EditorGUILayout.BeginHorizontal();
    if (GUILayout.Button("+", GUILayout.Width(20)))
    {
        GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement __e1;
        __e1 = new RoomGroup.RoomGroupElement();;
        this.elements.Add(__e1);
    }
    if (ConfigEditorSettings.showImportButton && GUILayout.Button("import", GUILayout.Width(100)))
    {
        ConfigEditorImportWindow.Open((__importJsonText1) => 
        {
            var __importJson1 = SimpleJSON.JSON.Parse(__importJsonText1);
            GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement __importElement1;
            if(!__importJson1.IsObject) { throw new SerializationException(); }  __importElement1 = GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement.LoadJsonRoomGroupElement(__importJson1);
            this.elements.Add(__importElement1);
        });
    }
    UnityEditor.EditorGUILayout.EndHorizontal();
    UnityEditor.EditorGUILayout.EndVertical();
}
UnityEditor.EditorGUILayout.EndHorizontal();    UnityEditor.EditorGUILayout.EndVertical();
}    }
    public static RoomGroupConfig LoadJsonRoomGroupConfig(SimpleJSON.JSONNode _json)
    {
        RoomGroupConfig obj = new RoomGroup.RoomGroupConfig();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonRoomGroupConfig(RoomGroupConfig _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 序号#
    /// </summary>
    public int id;
    public GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupRule rule;
    public System.Collections.Generic.List<GameEditor.ConfigEditor.Model.RoomGroup.RoomGroupElement> elements;

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "rule:" + rule + ","
        + "elements:" + Luban.StringUtil.CollectionToString(elements) + ","
        + "}";
    }
}

}

